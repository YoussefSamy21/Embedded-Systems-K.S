
Keypad_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a98  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  00000a98  00000b0c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000f0c  00000000  00000000  00000b24  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000b5e  00000000  00000000  00001a30  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 e9       	ldi	r30, 0x98	; 152
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 43 05 	call	0xa86	; 0xa86 <main>
  7a:	0c 94 4a 05 	jmp	0xa94	; 0xa94 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <DIO_uint8SetDirectionPIN>:
#include "../Utils/STD_LIBRARY.h"
#include "DIO_INTERFACE.h"
#include "DIO_REGISTERMAP.h"

void DIO_uint8SetDirectionPIN(PORT_NAME Copy_Port,PIN_NAME Copy_Pin,PIN_DIR Copy_Dir)
{
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	cd b7       	in	r28, 0x3d	; 61
  88:	de b7       	in	r29, 0x3e	; 62
  8a:	28 97       	sbiw	r28, 0x08	; 8
  8c:	0f b6       	in	r0, 0x3f	; 63
  8e:	f8 94       	cli
  90:	de bf       	out	0x3e, r29	; 62
  92:	0f be       	out	0x3f, r0	; 63
  94:	cd bf       	out	0x3d, r28	; 61
  96:	8a 83       	std	Y+2, r24	; 0x02
  98:	6b 83       	std	Y+3, r22	; 0x03
  9a:	4c 83       	std	Y+4, r20	; 0x04
	uint8 DIO_L_ErrorCode;
	if (Copy_Pin>=0 && Copy_Pin<=7)
  9c:	8b 81       	ldd	r24, Y+3	; 0x03
  9e:	88 30       	cpi	r24, 0x08	; 8
  a0:	08 f0       	brcs	.+2      	; 0xa4 <DIO_uint8SetDirectionPIN+0x22>
  a2:	f4 c0       	rjmp	.+488    	; 0x28c <DIO_uint8SetDirectionPIN+0x20a>
	{
		if (Copy_Dir==PIN_OUTPUT)
  a4:	8c 81       	ldd	r24, Y+4	; 0x04
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	09 f0       	breq	.+2      	; 0xac <DIO_uint8SetDirectionPIN+0x2a>
  aa:	72 c0       	rjmp	.+228    	; 0x190 <DIO_uint8SetDirectionPIN+0x10e>
			{
				switch(Copy_Port)
  ac:	8a 81       	ldd	r24, Y+2	; 0x02
  ae:	28 2f       	mov	r18, r24
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	38 87       	std	Y+8, r19	; 0x08
  b4:	2f 83       	std	Y+7, r18	; 0x07
  b6:	8f 81       	ldd	r24, Y+7	; 0x07
  b8:	98 85       	ldd	r25, Y+8	; 0x08
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	91 05       	cpc	r25, r1
  be:	49 f1       	breq	.+82     	; 0x112 <DIO_uint8SetDirectionPIN+0x90>
  c0:	2f 81       	ldd	r18, Y+7	; 0x07
  c2:	38 85       	ldd	r19, Y+8	; 0x08
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	2c f4       	brge	.+10     	; 0xd4 <DIO_uint8SetDirectionPIN+0x52>
  ca:	8f 81       	ldd	r24, Y+7	; 0x07
  cc:	98 85       	ldd	r25, Y+8	; 0x08
  ce:	00 97       	sbiw	r24, 0x00	; 0
  d0:	61 f0       	breq	.+24     	; 0xea <DIO_uint8SetDirectionPIN+0x68>
  d2:	5b c0       	rjmp	.+182    	; 0x18a <DIO_uint8SetDirectionPIN+0x108>
  d4:	2f 81       	ldd	r18, Y+7	; 0x07
  d6:	38 85       	ldd	r19, Y+8	; 0x08
  d8:	22 30       	cpi	r18, 0x02	; 2
  da:	31 05       	cpc	r19, r1
  dc:	71 f1       	breq	.+92     	; 0x13a <DIO_uint8SetDirectionPIN+0xb8>
  de:	8f 81       	ldd	r24, Y+7	; 0x07
  e0:	98 85       	ldd	r25, Y+8	; 0x08
  e2:	83 30       	cpi	r24, 0x03	; 3
  e4:	91 05       	cpc	r25, r1
  e6:	e9 f1       	breq	.+122    	; 0x162 <DIO_uint8SetDirectionPIN+0xe0>
  e8:	50 c0       	rjmp	.+160    	; 0x18a <DIO_uint8SetDirectionPIN+0x108>
				{
					case PORT_A: SET_BIT(DDRA,Copy_Pin);break;
  ea:	aa e3       	ldi	r26, 0x3A	; 58
  ec:	b0 e0       	ldi	r27, 0x00	; 0
  ee:	ea e3       	ldi	r30, 0x3A	; 58
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	48 2f       	mov	r20, r24
  f6:	8b 81       	ldd	r24, Y+3	; 0x03
  f8:	28 2f       	mov	r18, r24
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	81 e0       	ldi	r24, 0x01	; 1
  fe:	90 e0       	ldi	r25, 0x00	; 0
 100:	02 2e       	mov	r0, r18
 102:	02 c0       	rjmp	.+4      	; 0x108 <DIO_uint8SetDirectionPIN+0x86>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	0a 94       	dec	r0
 10a:	e2 f7       	brpl	.-8      	; 0x104 <DIO_uint8SetDirectionPIN+0x82>
 10c:	84 2b       	or	r24, r20
 10e:	8c 93       	st	X, r24
 110:	bf c0       	rjmp	.+382    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_B: SET_BIT(DDRB,Copy_Pin);break;
 112:	a7 e3       	ldi	r26, 0x37	; 55
 114:	b0 e0       	ldi	r27, 0x00	; 0
 116:	e7 e3       	ldi	r30, 0x37	; 55
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	48 2f       	mov	r20, r24
 11e:	8b 81       	ldd	r24, Y+3	; 0x03
 120:	28 2f       	mov	r18, r24
 122:	30 e0       	ldi	r19, 0x00	; 0
 124:	81 e0       	ldi	r24, 0x01	; 1
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	02 2e       	mov	r0, r18
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_uint8SetDirectionPIN+0xae>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	0a 94       	dec	r0
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_uint8SetDirectionPIN+0xaa>
 134:	84 2b       	or	r24, r20
 136:	8c 93       	st	X, r24
 138:	ab c0       	rjmp	.+342    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_C: SET_BIT(DDRC,Copy_Pin);break;
 13a:	a4 e3       	ldi	r26, 0x34	; 52
 13c:	b0 e0       	ldi	r27, 0x00	; 0
 13e:	e4 e3       	ldi	r30, 0x34	; 52
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	48 2f       	mov	r20, r24
 146:	8b 81       	ldd	r24, Y+3	; 0x03
 148:	28 2f       	mov	r18, r24
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	90 e0       	ldi	r25, 0x00	; 0
 150:	02 2e       	mov	r0, r18
 152:	02 c0       	rjmp	.+4      	; 0x158 <DIO_uint8SetDirectionPIN+0xd6>
 154:	88 0f       	add	r24, r24
 156:	99 1f       	adc	r25, r25
 158:	0a 94       	dec	r0
 15a:	e2 f7       	brpl	.-8      	; 0x154 <DIO_uint8SetDirectionPIN+0xd2>
 15c:	84 2b       	or	r24, r20
 15e:	8c 93       	st	X, r24
 160:	97 c0       	rjmp	.+302    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_D: SET_BIT(DDRD,Copy_Pin);break;
 162:	a1 e3       	ldi	r26, 0x31	; 49
 164:	b0 e0       	ldi	r27, 0x00	; 0
 166:	e1 e3       	ldi	r30, 0x31	; 49
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	80 81       	ld	r24, Z
 16c:	48 2f       	mov	r20, r24
 16e:	8b 81       	ldd	r24, Y+3	; 0x03
 170:	28 2f       	mov	r18, r24
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	02 2e       	mov	r0, r18
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_uint8SetDirectionPIN+0xfe>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	0a 94       	dec	r0
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_uint8SetDirectionPIN+0xfa>
 184:	84 2b       	or	r24, r20
 186:	8c 93       	st	X, r24
 188:	83 c0       	rjmp	.+262    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					default: DIO_L_ErrorCode=1;break;
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	89 83       	std	Y+1, r24	; 0x01
 18e:	80 c0       	rjmp	.+256    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
				}
			}
		else if (Copy_Dir==PIN_INPUT)
 190:	8c 81       	ldd	r24, Y+4	; 0x04
 192:	88 23       	and	r24, r24
 194:	09 f0       	breq	.+2      	; 0x198 <DIO_uint8SetDirectionPIN+0x116>
 196:	77 c0       	rjmp	.+238    	; 0x286 <DIO_uint8SetDirectionPIN+0x204>
			{
				switch(Copy_Port)
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	28 2f       	mov	r18, r24
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	3e 83       	std	Y+6, r19	; 0x06
 1a0:	2d 83       	std	Y+5, r18	; 0x05
 1a2:	8d 81       	ldd	r24, Y+5	; 0x05
 1a4:	9e 81       	ldd	r25, Y+6	; 0x06
 1a6:	81 30       	cpi	r24, 0x01	; 1
 1a8:	91 05       	cpc	r25, r1
 1aa:	59 f1       	breq	.+86     	; 0x202 <DIO_uint8SetDirectionPIN+0x180>
 1ac:	2d 81       	ldd	r18, Y+5	; 0x05
 1ae:	3e 81       	ldd	r19, Y+6	; 0x06
 1b0:	22 30       	cpi	r18, 0x02	; 2
 1b2:	31 05       	cpc	r19, r1
 1b4:	2c f4       	brge	.+10     	; 0x1c0 <DIO_uint8SetDirectionPIN+0x13e>
 1b6:	8d 81       	ldd	r24, Y+5	; 0x05
 1b8:	9e 81       	ldd	r25, Y+6	; 0x06
 1ba:	00 97       	sbiw	r24, 0x00	; 0
 1bc:	69 f0       	breq	.+26     	; 0x1d8 <DIO_uint8SetDirectionPIN+0x156>
 1be:	60 c0       	rjmp	.+192    	; 0x280 <DIO_uint8SetDirectionPIN+0x1fe>
 1c0:	2d 81       	ldd	r18, Y+5	; 0x05
 1c2:	3e 81       	ldd	r19, Y+6	; 0x06
 1c4:	22 30       	cpi	r18, 0x02	; 2
 1c6:	31 05       	cpc	r19, r1
 1c8:	89 f1       	breq	.+98     	; 0x22c <DIO_uint8SetDirectionPIN+0x1aa>
 1ca:	8d 81       	ldd	r24, Y+5	; 0x05
 1cc:	9e 81       	ldd	r25, Y+6	; 0x06
 1ce:	83 30       	cpi	r24, 0x03	; 3
 1d0:	91 05       	cpc	r25, r1
 1d2:	09 f4       	brne	.+2      	; 0x1d6 <DIO_uint8SetDirectionPIN+0x154>
 1d4:	40 c0       	rjmp	.+128    	; 0x256 <DIO_uint8SetDirectionPIN+0x1d4>
 1d6:	54 c0       	rjmp	.+168    	; 0x280 <DIO_uint8SetDirectionPIN+0x1fe>
				{
					case PORT_A: CLEAR_BIT(DDRA,Copy_Pin);break;
 1d8:	aa e3       	ldi	r26, 0x3A	; 58
 1da:	b0 e0       	ldi	r27, 0x00	; 0
 1dc:	ea e3       	ldi	r30, 0x3A	; 58
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	48 2f       	mov	r20, r24
 1e4:	8b 81       	ldd	r24, Y+3	; 0x03
 1e6:	28 2f       	mov	r18, r24
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_uint8SetDirectionPIN+0x174>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_uint8SetDirectionPIN+0x170>
 1fa:	80 95       	com	r24
 1fc:	84 23       	and	r24, r20
 1fe:	8c 93       	st	X, r24
 200:	47 c0       	rjmp	.+142    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_B: CLEAR_BIT(DDRB,Copy_Pin);break;
 202:	a7 e3       	ldi	r26, 0x37	; 55
 204:	b0 e0       	ldi	r27, 0x00	; 0
 206:	e7 e3       	ldi	r30, 0x37	; 55
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	48 2f       	mov	r20, r24
 20e:	8b 81       	ldd	r24, Y+3	; 0x03
 210:	28 2f       	mov	r18, r24
 212:	30 e0       	ldi	r19, 0x00	; 0
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	02 2e       	mov	r0, r18
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_uint8SetDirectionPIN+0x19e>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	0a 94       	dec	r0
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_uint8SetDirectionPIN+0x19a>
 224:	80 95       	com	r24
 226:	84 23       	and	r24, r20
 228:	8c 93       	st	X, r24
 22a:	32 c0       	rjmp	.+100    	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_C: CLEAR_BIT(DDRC,Copy_Pin);break;
 22c:	a4 e3       	ldi	r26, 0x34	; 52
 22e:	b0 e0       	ldi	r27, 0x00	; 0
 230:	e4 e3       	ldi	r30, 0x34	; 52
 232:	f0 e0       	ldi	r31, 0x00	; 0
 234:	80 81       	ld	r24, Z
 236:	48 2f       	mov	r20, r24
 238:	8b 81       	ldd	r24, Y+3	; 0x03
 23a:	28 2f       	mov	r18, r24
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	02 2e       	mov	r0, r18
 244:	02 c0       	rjmp	.+4      	; 0x24a <DIO_uint8SetDirectionPIN+0x1c8>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	0a 94       	dec	r0
 24c:	e2 f7       	brpl	.-8      	; 0x246 <DIO_uint8SetDirectionPIN+0x1c4>
 24e:	80 95       	com	r24
 250:	84 23       	and	r24, r20
 252:	8c 93       	st	X, r24
 254:	1d c0       	rjmp	.+58     	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					case PORT_D: CLEAR_BIT(DDRD,Copy_Pin);break;
 256:	a1 e3       	ldi	r26, 0x31	; 49
 258:	b0 e0       	ldi	r27, 0x00	; 0
 25a:	e1 e3       	ldi	r30, 0x31	; 49
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	48 2f       	mov	r20, r24
 262:	8b 81       	ldd	r24, Y+3	; 0x03
 264:	28 2f       	mov	r18, r24
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	81 e0       	ldi	r24, 0x01	; 1
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	02 2e       	mov	r0, r18
 26e:	02 c0       	rjmp	.+4      	; 0x274 <DIO_uint8SetDirectionPIN+0x1f2>
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	0a 94       	dec	r0
 276:	e2 f7       	brpl	.-8      	; 0x270 <DIO_uint8SetDirectionPIN+0x1ee>
 278:	80 95       	com	r24
 27a:	84 23       	and	r24, r20
 27c:	8c 93       	st	X, r24
 27e:	08 c0       	rjmp	.+16     	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
					default: DIO_L_ErrorCode=1;break;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	89 83       	std	Y+1, r24	; 0x01
 284:	05 c0       	rjmp	.+10     	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
				}
			}
		else
			DIO_L_ErrorCode=1;
 286:	81 e0       	ldi	r24, 0x01	; 1
 288:	89 83       	std	Y+1, r24	; 0x01
 28a:	02 c0       	rjmp	.+4      	; 0x290 <DIO_uint8SetDirectionPIN+0x20e>
	}
	else
	{
		DIO_L_ErrorCode=1;
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	89 83       	std	Y+1, r24	; 0x01
	}
}
 290:	28 96       	adiw	r28, 0x08	; 8
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	f8 94       	cli
 296:	de bf       	out	0x3e, r29	; 62
 298:	0f be       	out	0x3f, r0	; 63
 29a:	cd bf       	out	0x3d, r28	; 61
 29c:	cf 91       	pop	r28
 29e:	df 91       	pop	r29
 2a0:	08 95       	ret

000002a2 <DIO_uint8SetDirectionPort>:

/*----------------------------------------------------------------------------------*/

void DIO_uint8SetDirectionPort(PORT_NAME Copy_Port,PORT_DIR Copy_Dir)
{
 2a2:	df 93       	push	r29
 2a4:	cf 93       	push	r28
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62
 2aa:	27 97       	sbiw	r28, 0x07	; 7
 2ac:	0f b6       	in	r0, 0x3f	; 63
 2ae:	f8 94       	cli
 2b0:	de bf       	out	0x3e, r29	; 62
 2b2:	0f be       	out	0x3f, r0	; 63
 2b4:	cd bf       	out	0x3d, r28	; 61
 2b6:	8a 83       	std	Y+2, r24	; 0x02
 2b8:	6b 83       	std	Y+3, r22	; 0x03
		uint8 DIO_L_ErrorCode;
		if (Copy_Dir==PORT_OUTPUT)
 2ba:	8b 81       	ldd	r24, Y+3	; 0x03
 2bc:	8f 3f       	cpi	r24, 0xFF	; 255
 2be:	b1 f5       	brne	.+108    	; 0x32c <DIO_uint8SetDirectionPort+0x8a>
			{
				switch(Copy_Port)
 2c0:	8a 81       	ldd	r24, Y+2	; 0x02
 2c2:	28 2f       	mov	r18, r24
 2c4:	30 e0       	ldi	r19, 0x00	; 0
 2c6:	3f 83       	std	Y+7, r19	; 0x07
 2c8:	2e 83       	std	Y+6, r18	; 0x06
 2ca:	8e 81       	ldd	r24, Y+6	; 0x06
 2cc:	9f 81       	ldd	r25, Y+7	; 0x07
 2ce:	81 30       	cpi	r24, 0x01	; 1
 2d0:	91 05       	cpc	r25, r1
 2d2:	d1 f0       	breq	.+52     	; 0x308 <DIO_uint8SetDirectionPort+0x66>
 2d4:	2e 81       	ldd	r18, Y+6	; 0x06
 2d6:	3f 81       	ldd	r19, Y+7	; 0x07
 2d8:	22 30       	cpi	r18, 0x02	; 2
 2da:	31 05       	cpc	r19, r1
 2dc:	2c f4       	brge	.+10     	; 0x2e8 <DIO_uint8SetDirectionPort+0x46>
 2de:	8e 81       	ldd	r24, Y+6	; 0x06
 2e0:	9f 81       	ldd	r25, Y+7	; 0x07
 2e2:	00 97       	sbiw	r24, 0x00	; 0
 2e4:	61 f0       	breq	.+24     	; 0x2fe <DIO_uint8SetDirectionPort+0x5c>
 2e6:	1f c0       	rjmp	.+62     	; 0x326 <DIO_uint8SetDirectionPort+0x84>
 2e8:	2e 81       	ldd	r18, Y+6	; 0x06
 2ea:	3f 81       	ldd	r19, Y+7	; 0x07
 2ec:	22 30       	cpi	r18, 0x02	; 2
 2ee:	31 05       	cpc	r19, r1
 2f0:	81 f0       	breq	.+32     	; 0x312 <DIO_uint8SetDirectionPort+0x70>
 2f2:	8e 81       	ldd	r24, Y+6	; 0x06
 2f4:	9f 81       	ldd	r25, Y+7	; 0x07
 2f6:	83 30       	cpi	r24, 0x03	; 3
 2f8:	91 05       	cpc	r25, r1
 2fa:	81 f0       	breq	.+32     	; 0x31c <DIO_uint8SetDirectionPort+0x7a>
 2fc:	14 c0       	rjmp	.+40     	; 0x326 <DIO_uint8SetDirectionPort+0x84>
				{
					case PORT_A:DDRA=PORT_OUTPUT;break;
 2fe:	ea e3       	ldi	r30, 0x3A	; 58
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	8f ef       	ldi	r24, 0xFF	; 255
 304:	80 83       	st	Z, r24
 306:	49 c0       	rjmp	.+146    	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_B:DDRB=PORT_OUTPUT;break;
 308:	e7 e3       	ldi	r30, 0x37	; 55
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	80 83       	st	Z, r24
 310:	44 c0       	rjmp	.+136    	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_C:DDRC=PORT_OUTPUT;break;
 312:	e4 e3       	ldi	r30, 0x34	; 52
 314:	f0 e0       	ldi	r31, 0x00	; 0
 316:	8f ef       	ldi	r24, 0xFF	; 255
 318:	80 83       	st	Z, r24
 31a:	3f c0       	rjmp	.+126    	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_D:DDRD=PORT_OUTPUT;break;
 31c:	e1 e3       	ldi	r30, 0x31	; 49
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	80 83       	st	Z, r24
 324:	3a c0       	rjmp	.+116    	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					default: DIO_L_ErrorCode=1;break;
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	89 83       	std	Y+1, r24	; 0x01
 32a:	37 c0       	rjmp	.+110    	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
				}
			}
		else if (Copy_Dir==PORT_INPUT)
 32c:	8b 81       	ldd	r24, Y+3	; 0x03
 32e:	88 23       	and	r24, r24
 330:	91 f5       	brne	.+100    	; 0x396 <DIO_uint8SetDirectionPort+0xf4>
			{
				switch(Copy_Port)
 332:	8a 81       	ldd	r24, Y+2	; 0x02
 334:	28 2f       	mov	r18, r24
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	3d 83       	std	Y+5, r19	; 0x05
 33a:	2c 83       	std	Y+4, r18	; 0x04
 33c:	8c 81       	ldd	r24, Y+4	; 0x04
 33e:	9d 81       	ldd	r25, Y+5	; 0x05
 340:	81 30       	cpi	r24, 0x01	; 1
 342:	91 05       	cpc	r25, r1
 344:	c9 f0       	breq	.+50     	; 0x378 <DIO_uint8SetDirectionPort+0xd6>
 346:	2c 81       	ldd	r18, Y+4	; 0x04
 348:	3d 81       	ldd	r19, Y+5	; 0x05
 34a:	22 30       	cpi	r18, 0x02	; 2
 34c:	31 05       	cpc	r19, r1
 34e:	2c f4       	brge	.+10     	; 0x35a <DIO_uint8SetDirectionPort+0xb8>
 350:	8c 81       	ldd	r24, Y+4	; 0x04
 352:	9d 81       	ldd	r25, Y+5	; 0x05
 354:	00 97       	sbiw	r24, 0x00	; 0
 356:	61 f0       	breq	.+24     	; 0x370 <DIO_uint8SetDirectionPort+0xce>
 358:	1b c0       	rjmp	.+54     	; 0x390 <DIO_uint8SetDirectionPort+0xee>
 35a:	2c 81       	ldd	r18, Y+4	; 0x04
 35c:	3d 81       	ldd	r19, Y+5	; 0x05
 35e:	22 30       	cpi	r18, 0x02	; 2
 360:	31 05       	cpc	r19, r1
 362:	71 f0       	breq	.+28     	; 0x380 <DIO_uint8SetDirectionPort+0xde>
 364:	8c 81       	ldd	r24, Y+4	; 0x04
 366:	9d 81       	ldd	r25, Y+5	; 0x05
 368:	83 30       	cpi	r24, 0x03	; 3
 36a:	91 05       	cpc	r25, r1
 36c:	69 f0       	breq	.+26     	; 0x388 <DIO_uint8SetDirectionPort+0xe6>
 36e:	10 c0       	rjmp	.+32     	; 0x390 <DIO_uint8SetDirectionPort+0xee>
				{
					case PORT_A: DDRA=PORT_INPUT;break;
 370:	ea e3       	ldi	r30, 0x3A	; 58
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	10 82       	st	Z, r1
 376:	11 c0       	rjmp	.+34     	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_B: DDRB=PORT_INPUT;break;
 378:	e7 e3       	ldi	r30, 0x37	; 55
 37a:	f0 e0       	ldi	r31, 0x00	; 0
 37c:	10 82       	st	Z, r1
 37e:	0d c0       	rjmp	.+26     	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_C: DDRC=PORT_INPUT;break;
 380:	e4 e3       	ldi	r30, 0x34	; 52
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	10 82       	st	Z, r1
 386:	09 c0       	rjmp	.+18     	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					case PORT_D: DDRD=PORT_INPUT;break;
 388:	e1 e3       	ldi	r30, 0x31	; 49
 38a:	f0 e0       	ldi	r31, 0x00	; 0
 38c:	10 82       	st	Z, r1
 38e:	05 c0       	rjmp	.+10     	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
					default: DIO_L_ErrorCode=1;break;
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	89 83       	std	Y+1, r24	; 0x01
 394:	02 c0       	rjmp	.+4      	; 0x39a <DIO_uint8SetDirectionPort+0xf8>
				}
			}
		else
			DIO_L_ErrorCode=1;
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	89 83       	std	Y+1, r24	; 0x01
	}
 39a:	27 96       	adiw	r28, 0x07	; 7
 39c:	0f b6       	in	r0, 0x3f	; 63
 39e:	f8 94       	cli
 3a0:	de bf       	out	0x3e, r29	; 62
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	cd bf       	out	0x3d, r28	; 61
 3a6:	cf 91       	pop	r28
 3a8:	df 91       	pop	r29
 3aa:	08 95       	ret

000003ac <DIO_uint8SetValuePIN>:


/*---------------------------------------------------------------------------------------------*/

void DIO_uint8SetValuePIN(PORT_NAME Copy_Port,PIN_NAME Copy_Pin,PIN_VALUE Copy_Value)
{
 3ac:	df 93       	push	r29
 3ae:	cf 93       	push	r28
 3b0:	cd b7       	in	r28, 0x3d	; 61
 3b2:	de b7       	in	r29, 0x3e	; 62
 3b4:	28 97       	sbiw	r28, 0x08	; 8
 3b6:	0f b6       	in	r0, 0x3f	; 63
 3b8:	f8 94       	cli
 3ba:	de bf       	out	0x3e, r29	; 62
 3bc:	0f be       	out	0x3f, r0	; 63
 3be:	cd bf       	out	0x3d, r28	; 61
 3c0:	8a 83       	std	Y+2, r24	; 0x02
 3c2:	6b 83       	std	Y+3, r22	; 0x03
 3c4:	4c 83       	std	Y+4, r20	; 0x04
	uint8 DIO_L_ErrorCode;
	if (Copy_Pin>=0 && Copy_Pin<=7)
 3c6:	8b 81       	ldd	r24, Y+3	; 0x03
 3c8:	88 30       	cpi	r24, 0x08	; 8
 3ca:	08 f0       	brcs	.+2      	; 0x3ce <DIO_uint8SetValuePIN+0x22>
 3cc:	f4 c0       	rjmp	.+488    	; 0x5b6 <DIO_uint8SetValuePIN+0x20a>
	{
		if (Copy_Value==PIN_HIGH)
 3ce:	8c 81       	ldd	r24, Y+4	; 0x04
 3d0:	81 30       	cpi	r24, 0x01	; 1
 3d2:	09 f0       	breq	.+2      	; 0x3d6 <DIO_uint8SetValuePIN+0x2a>
 3d4:	72 c0       	rjmp	.+228    	; 0x4ba <DIO_uint8SetValuePIN+0x10e>
			{
				switch(Copy_Port)
 3d6:	8a 81       	ldd	r24, Y+2	; 0x02
 3d8:	28 2f       	mov	r18, r24
 3da:	30 e0       	ldi	r19, 0x00	; 0
 3dc:	38 87       	std	Y+8, r19	; 0x08
 3de:	2f 83       	std	Y+7, r18	; 0x07
 3e0:	8f 81       	ldd	r24, Y+7	; 0x07
 3e2:	98 85       	ldd	r25, Y+8	; 0x08
 3e4:	81 30       	cpi	r24, 0x01	; 1
 3e6:	91 05       	cpc	r25, r1
 3e8:	49 f1       	breq	.+82     	; 0x43c <DIO_uint8SetValuePIN+0x90>
 3ea:	2f 81       	ldd	r18, Y+7	; 0x07
 3ec:	38 85       	ldd	r19, Y+8	; 0x08
 3ee:	22 30       	cpi	r18, 0x02	; 2
 3f0:	31 05       	cpc	r19, r1
 3f2:	2c f4       	brge	.+10     	; 0x3fe <DIO_uint8SetValuePIN+0x52>
 3f4:	8f 81       	ldd	r24, Y+7	; 0x07
 3f6:	98 85       	ldd	r25, Y+8	; 0x08
 3f8:	00 97       	sbiw	r24, 0x00	; 0
 3fa:	61 f0       	breq	.+24     	; 0x414 <DIO_uint8SetValuePIN+0x68>
 3fc:	5b c0       	rjmp	.+182    	; 0x4b4 <DIO_uint8SetValuePIN+0x108>
 3fe:	2f 81       	ldd	r18, Y+7	; 0x07
 400:	38 85       	ldd	r19, Y+8	; 0x08
 402:	22 30       	cpi	r18, 0x02	; 2
 404:	31 05       	cpc	r19, r1
 406:	71 f1       	breq	.+92     	; 0x464 <DIO_uint8SetValuePIN+0xb8>
 408:	8f 81       	ldd	r24, Y+7	; 0x07
 40a:	98 85       	ldd	r25, Y+8	; 0x08
 40c:	83 30       	cpi	r24, 0x03	; 3
 40e:	91 05       	cpc	r25, r1
 410:	e9 f1       	breq	.+122    	; 0x48c <DIO_uint8SetValuePIN+0xe0>
 412:	50 c0       	rjmp	.+160    	; 0x4b4 <DIO_uint8SetValuePIN+0x108>
				{
					case PORT_A: SET_BIT(PORTA,Copy_Pin);break;
 414:	ab e3       	ldi	r26, 0x3B	; 59
 416:	b0 e0       	ldi	r27, 0x00	; 0
 418:	eb e3       	ldi	r30, 0x3B	; 59
 41a:	f0 e0       	ldi	r31, 0x00	; 0
 41c:	80 81       	ld	r24, Z
 41e:	48 2f       	mov	r20, r24
 420:	8b 81       	ldd	r24, Y+3	; 0x03
 422:	28 2f       	mov	r18, r24
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	02 2e       	mov	r0, r18
 42c:	02 c0       	rjmp	.+4      	; 0x432 <DIO_uint8SetValuePIN+0x86>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	0a 94       	dec	r0
 434:	e2 f7       	brpl	.-8      	; 0x42e <DIO_uint8SetValuePIN+0x82>
 436:	84 2b       	or	r24, r20
 438:	8c 93       	st	X, r24
 43a:	bf c0       	rjmp	.+382    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_B: SET_BIT(PORTB,Copy_Pin);break;
 43c:	a8 e3       	ldi	r26, 0x38	; 56
 43e:	b0 e0       	ldi	r27, 0x00	; 0
 440:	e8 e3       	ldi	r30, 0x38	; 56
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	80 81       	ld	r24, Z
 446:	48 2f       	mov	r20, r24
 448:	8b 81       	ldd	r24, Y+3	; 0x03
 44a:	28 2f       	mov	r18, r24
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	81 e0       	ldi	r24, 0x01	; 1
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	02 2e       	mov	r0, r18
 454:	02 c0       	rjmp	.+4      	; 0x45a <DIO_uint8SetValuePIN+0xae>
 456:	88 0f       	add	r24, r24
 458:	99 1f       	adc	r25, r25
 45a:	0a 94       	dec	r0
 45c:	e2 f7       	brpl	.-8      	; 0x456 <DIO_uint8SetValuePIN+0xaa>
 45e:	84 2b       	or	r24, r20
 460:	8c 93       	st	X, r24
 462:	ab c0       	rjmp	.+342    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_C: SET_BIT(PORTC,Copy_Pin);break;
 464:	a5 e3       	ldi	r26, 0x35	; 53
 466:	b0 e0       	ldi	r27, 0x00	; 0
 468:	e5 e3       	ldi	r30, 0x35	; 53
 46a:	f0 e0       	ldi	r31, 0x00	; 0
 46c:	80 81       	ld	r24, Z
 46e:	48 2f       	mov	r20, r24
 470:	8b 81       	ldd	r24, Y+3	; 0x03
 472:	28 2f       	mov	r18, r24
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	02 2e       	mov	r0, r18
 47c:	02 c0       	rjmp	.+4      	; 0x482 <DIO_uint8SetValuePIN+0xd6>
 47e:	88 0f       	add	r24, r24
 480:	99 1f       	adc	r25, r25
 482:	0a 94       	dec	r0
 484:	e2 f7       	brpl	.-8      	; 0x47e <DIO_uint8SetValuePIN+0xd2>
 486:	84 2b       	or	r24, r20
 488:	8c 93       	st	X, r24
 48a:	97 c0       	rjmp	.+302    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_D: SET_BIT(PORTD,Copy_Pin);break;
 48c:	a2 e3       	ldi	r26, 0x32	; 50
 48e:	b0 e0       	ldi	r27, 0x00	; 0
 490:	e2 e3       	ldi	r30, 0x32	; 50
 492:	f0 e0       	ldi	r31, 0x00	; 0
 494:	80 81       	ld	r24, Z
 496:	48 2f       	mov	r20, r24
 498:	8b 81       	ldd	r24, Y+3	; 0x03
 49a:	28 2f       	mov	r18, r24
 49c:	30 e0       	ldi	r19, 0x00	; 0
 49e:	81 e0       	ldi	r24, 0x01	; 1
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	02 2e       	mov	r0, r18
 4a4:	02 c0       	rjmp	.+4      	; 0x4aa <DIO_uint8SetValuePIN+0xfe>
 4a6:	88 0f       	add	r24, r24
 4a8:	99 1f       	adc	r25, r25
 4aa:	0a 94       	dec	r0
 4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <DIO_uint8SetValuePIN+0xfa>
 4ae:	84 2b       	or	r24, r20
 4b0:	8c 93       	st	X, r24
 4b2:	83 c0       	rjmp	.+262    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					default: DIO_L_ErrorCode=1;break;
 4b4:	81 e0       	ldi	r24, 0x01	; 1
 4b6:	89 83       	std	Y+1, r24	; 0x01
 4b8:	80 c0       	rjmp	.+256    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
				}
			}
		else if (Copy_Value==PIN_LOW)
 4ba:	8c 81       	ldd	r24, Y+4	; 0x04
 4bc:	88 23       	and	r24, r24
 4be:	09 f0       	breq	.+2      	; 0x4c2 <DIO_uint8SetValuePIN+0x116>
 4c0:	77 c0       	rjmp	.+238    	; 0x5b0 <DIO_uint8SetValuePIN+0x204>
			{
				switch(Copy_Port)
 4c2:	8a 81       	ldd	r24, Y+2	; 0x02
 4c4:	28 2f       	mov	r18, r24
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	3e 83       	std	Y+6, r19	; 0x06
 4ca:	2d 83       	std	Y+5, r18	; 0x05
 4cc:	8d 81       	ldd	r24, Y+5	; 0x05
 4ce:	9e 81       	ldd	r25, Y+6	; 0x06
 4d0:	81 30       	cpi	r24, 0x01	; 1
 4d2:	91 05       	cpc	r25, r1
 4d4:	59 f1       	breq	.+86     	; 0x52c <DIO_uint8SetValuePIN+0x180>
 4d6:	2d 81       	ldd	r18, Y+5	; 0x05
 4d8:	3e 81       	ldd	r19, Y+6	; 0x06
 4da:	22 30       	cpi	r18, 0x02	; 2
 4dc:	31 05       	cpc	r19, r1
 4de:	2c f4       	brge	.+10     	; 0x4ea <DIO_uint8SetValuePIN+0x13e>
 4e0:	8d 81       	ldd	r24, Y+5	; 0x05
 4e2:	9e 81       	ldd	r25, Y+6	; 0x06
 4e4:	00 97       	sbiw	r24, 0x00	; 0
 4e6:	69 f0       	breq	.+26     	; 0x502 <DIO_uint8SetValuePIN+0x156>
 4e8:	60 c0       	rjmp	.+192    	; 0x5aa <DIO_uint8SetValuePIN+0x1fe>
 4ea:	2d 81       	ldd	r18, Y+5	; 0x05
 4ec:	3e 81       	ldd	r19, Y+6	; 0x06
 4ee:	22 30       	cpi	r18, 0x02	; 2
 4f0:	31 05       	cpc	r19, r1
 4f2:	89 f1       	breq	.+98     	; 0x556 <DIO_uint8SetValuePIN+0x1aa>
 4f4:	8d 81       	ldd	r24, Y+5	; 0x05
 4f6:	9e 81       	ldd	r25, Y+6	; 0x06
 4f8:	83 30       	cpi	r24, 0x03	; 3
 4fa:	91 05       	cpc	r25, r1
 4fc:	09 f4       	brne	.+2      	; 0x500 <DIO_uint8SetValuePIN+0x154>
 4fe:	40 c0       	rjmp	.+128    	; 0x580 <DIO_uint8SetValuePIN+0x1d4>
 500:	54 c0       	rjmp	.+168    	; 0x5aa <DIO_uint8SetValuePIN+0x1fe>
				{
					case PORT_A: CLEAR_BIT(PORTA,Copy_Pin);break;
 502:	ab e3       	ldi	r26, 0x3B	; 59
 504:	b0 e0       	ldi	r27, 0x00	; 0
 506:	eb e3       	ldi	r30, 0x3B	; 59
 508:	f0 e0       	ldi	r31, 0x00	; 0
 50a:	80 81       	ld	r24, Z
 50c:	48 2f       	mov	r20, r24
 50e:	8b 81       	ldd	r24, Y+3	; 0x03
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	02 2e       	mov	r0, r18
 51a:	02 c0       	rjmp	.+4      	; 0x520 <DIO_uint8SetValuePIN+0x174>
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	0a 94       	dec	r0
 522:	e2 f7       	brpl	.-8      	; 0x51c <DIO_uint8SetValuePIN+0x170>
 524:	80 95       	com	r24
 526:	84 23       	and	r24, r20
 528:	8c 93       	st	X, r24
 52a:	47 c0       	rjmp	.+142    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_B: CLEAR_BIT(PORTB,Copy_Pin);break;
 52c:	a8 e3       	ldi	r26, 0x38	; 56
 52e:	b0 e0       	ldi	r27, 0x00	; 0
 530:	e8 e3       	ldi	r30, 0x38	; 56
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	80 81       	ld	r24, Z
 536:	48 2f       	mov	r20, r24
 538:	8b 81       	ldd	r24, Y+3	; 0x03
 53a:	28 2f       	mov	r18, r24
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	81 e0       	ldi	r24, 0x01	; 1
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	02 2e       	mov	r0, r18
 544:	02 c0       	rjmp	.+4      	; 0x54a <DIO_uint8SetValuePIN+0x19e>
 546:	88 0f       	add	r24, r24
 548:	99 1f       	adc	r25, r25
 54a:	0a 94       	dec	r0
 54c:	e2 f7       	brpl	.-8      	; 0x546 <DIO_uint8SetValuePIN+0x19a>
 54e:	80 95       	com	r24
 550:	84 23       	and	r24, r20
 552:	8c 93       	st	X, r24
 554:	32 c0       	rjmp	.+100    	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_C: CLEAR_BIT(PORTC,Copy_Pin);break;
 556:	a5 e3       	ldi	r26, 0x35	; 53
 558:	b0 e0       	ldi	r27, 0x00	; 0
 55a:	e5 e3       	ldi	r30, 0x35	; 53
 55c:	f0 e0       	ldi	r31, 0x00	; 0
 55e:	80 81       	ld	r24, Z
 560:	48 2f       	mov	r20, r24
 562:	8b 81       	ldd	r24, Y+3	; 0x03
 564:	28 2f       	mov	r18, r24
 566:	30 e0       	ldi	r19, 0x00	; 0
 568:	81 e0       	ldi	r24, 0x01	; 1
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	02 2e       	mov	r0, r18
 56e:	02 c0       	rjmp	.+4      	; 0x574 <DIO_uint8SetValuePIN+0x1c8>
 570:	88 0f       	add	r24, r24
 572:	99 1f       	adc	r25, r25
 574:	0a 94       	dec	r0
 576:	e2 f7       	brpl	.-8      	; 0x570 <DIO_uint8SetValuePIN+0x1c4>
 578:	80 95       	com	r24
 57a:	84 23       	and	r24, r20
 57c:	8c 93       	st	X, r24
 57e:	1d c0       	rjmp	.+58     	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					case PORT_D: CLEAR_BIT(PORTD,Copy_Pin);break;
 580:	a2 e3       	ldi	r26, 0x32	; 50
 582:	b0 e0       	ldi	r27, 0x00	; 0
 584:	e2 e3       	ldi	r30, 0x32	; 50
 586:	f0 e0       	ldi	r31, 0x00	; 0
 588:	80 81       	ld	r24, Z
 58a:	48 2f       	mov	r20, r24
 58c:	8b 81       	ldd	r24, Y+3	; 0x03
 58e:	28 2f       	mov	r18, r24
 590:	30 e0       	ldi	r19, 0x00	; 0
 592:	81 e0       	ldi	r24, 0x01	; 1
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	02 2e       	mov	r0, r18
 598:	02 c0       	rjmp	.+4      	; 0x59e <DIO_uint8SetValuePIN+0x1f2>
 59a:	88 0f       	add	r24, r24
 59c:	99 1f       	adc	r25, r25
 59e:	0a 94       	dec	r0
 5a0:	e2 f7       	brpl	.-8      	; 0x59a <DIO_uint8SetValuePIN+0x1ee>
 5a2:	80 95       	com	r24
 5a4:	84 23       	and	r24, r20
 5a6:	8c 93       	st	X, r24
 5a8:	08 c0       	rjmp	.+16     	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
					default: DIO_L_ErrorCode=1;break;
 5aa:	81 e0       	ldi	r24, 0x01	; 1
 5ac:	89 83       	std	Y+1, r24	; 0x01
 5ae:	05 c0       	rjmp	.+10     	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
				}
			}
		else
			DIO_L_ErrorCode=1;
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	89 83       	std	Y+1, r24	; 0x01
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <DIO_uint8SetValuePIN+0x20e>
	}
	else
	{
		DIO_L_ErrorCode=1;
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	89 83       	std	Y+1, r24	; 0x01
	}
}
 5ba:	28 96       	adiw	r28, 0x08	; 8
 5bc:	0f b6       	in	r0, 0x3f	; 63
 5be:	f8 94       	cli
 5c0:	de bf       	out	0x3e, r29	; 62
 5c2:	0f be       	out	0x3f, r0	; 63
 5c4:	cd bf       	out	0x3d, r28	; 61
 5c6:	cf 91       	pop	r28
 5c8:	df 91       	pop	r29
 5ca:	08 95       	ret

000005cc <DIO_uint8SetValuePort>:

/*-------------------------------------------------------------------------------------*/

void DIO_uint8SetValuePort(PORT_NAME Copy_Port,PORT_VALUE Copy_Value)
{
 5cc:	df 93       	push	r29
 5ce:	cf 93       	push	r28
 5d0:	cd b7       	in	r28, 0x3d	; 61
 5d2:	de b7       	in	r29, 0x3e	; 62
 5d4:	27 97       	sbiw	r28, 0x07	; 7
 5d6:	0f b6       	in	r0, 0x3f	; 63
 5d8:	f8 94       	cli
 5da:	de bf       	out	0x3e, r29	; 62
 5dc:	0f be       	out	0x3f, r0	; 63
 5de:	cd bf       	out	0x3d, r28	; 61
 5e0:	8a 83       	std	Y+2, r24	; 0x02
 5e2:	6b 83       	std	Y+3, r22	; 0x03
		uint8 DIO_L_ErrorCode;
		if (Copy_Value==PORT_HIGH)
 5e4:	8b 81       	ldd	r24, Y+3	; 0x03
 5e6:	8f 3f       	cpi	r24, 0xFF	; 255
 5e8:	b1 f5       	brne	.+108    	; 0x656 <DIO_uint8SetValuePort+0x8a>
			{
				switch(Copy_Port)
 5ea:	8a 81       	ldd	r24, Y+2	; 0x02
 5ec:	28 2f       	mov	r18, r24
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	3f 83       	std	Y+7, r19	; 0x07
 5f2:	2e 83       	std	Y+6, r18	; 0x06
 5f4:	8e 81       	ldd	r24, Y+6	; 0x06
 5f6:	9f 81       	ldd	r25, Y+7	; 0x07
 5f8:	81 30       	cpi	r24, 0x01	; 1
 5fa:	91 05       	cpc	r25, r1
 5fc:	d1 f0       	breq	.+52     	; 0x632 <DIO_uint8SetValuePort+0x66>
 5fe:	2e 81       	ldd	r18, Y+6	; 0x06
 600:	3f 81       	ldd	r19, Y+7	; 0x07
 602:	22 30       	cpi	r18, 0x02	; 2
 604:	31 05       	cpc	r19, r1
 606:	2c f4       	brge	.+10     	; 0x612 <DIO_uint8SetValuePort+0x46>
 608:	8e 81       	ldd	r24, Y+6	; 0x06
 60a:	9f 81       	ldd	r25, Y+7	; 0x07
 60c:	00 97       	sbiw	r24, 0x00	; 0
 60e:	61 f0       	breq	.+24     	; 0x628 <DIO_uint8SetValuePort+0x5c>
 610:	1f c0       	rjmp	.+62     	; 0x650 <DIO_uint8SetValuePort+0x84>
 612:	2e 81       	ldd	r18, Y+6	; 0x06
 614:	3f 81       	ldd	r19, Y+7	; 0x07
 616:	22 30       	cpi	r18, 0x02	; 2
 618:	31 05       	cpc	r19, r1
 61a:	81 f0       	breq	.+32     	; 0x63c <DIO_uint8SetValuePort+0x70>
 61c:	8e 81       	ldd	r24, Y+6	; 0x06
 61e:	9f 81       	ldd	r25, Y+7	; 0x07
 620:	83 30       	cpi	r24, 0x03	; 3
 622:	91 05       	cpc	r25, r1
 624:	81 f0       	breq	.+32     	; 0x646 <DIO_uint8SetValuePort+0x7a>
 626:	14 c0       	rjmp	.+40     	; 0x650 <DIO_uint8SetValuePort+0x84>
				{
					case PORT_A:PORTA=PORT_HIGH;break;
 628:	eb e3       	ldi	r30, 0x3B	; 59
 62a:	f0 e0       	ldi	r31, 0x00	; 0
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	80 83       	st	Z, r24
 630:	49 c0       	rjmp	.+146    	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_B:PORTB=PORT_HIGH;break;
 632:	e8 e3       	ldi	r30, 0x38	; 56
 634:	f0 e0       	ldi	r31, 0x00	; 0
 636:	8f ef       	ldi	r24, 0xFF	; 255
 638:	80 83       	st	Z, r24
 63a:	44 c0       	rjmp	.+136    	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_C:PORTC=PORT_HIGH;break;
 63c:	e5 e3       	ldi	r30, 0x35	; 53
 63e:	f0 e0       	ldi	r31, 0x00	; 0
 640:	8f ef       	ldi	r24, 0xFF	; 255
 642:	80 83       	st	Z, r24
 644:	3f c0       	rjmp	.+126    	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_D:PORTD=PORT_HIGH;break;
 646:	e2 e3       	ldi	r30, 0x32	; 50
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	8f ef       	ldi	r24, 0xFF	; 255
 64c:	80 83       	st	Z, r24
 64e:	3a c0       	rjmp	.+116    	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					default: DIO_L_ErrorCode=1;break;
 650:	81 e0       	ldi	r24, 0x01	; 1
 652:	89 83       	std	Y+1, r24	; 0x01
 654:	37 c0       	rjmp	.+110    	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
				}
			}
		else if (Copy_Value==PORT_LOW)
 656:	8b 81       	ldd	r24, Y+3	; 0x03
 658:	88 23       	and	r24, r24
 65a:	91 f5       	brne	.+100    	; 0x6c0 <DIO_uint8SetValuePort+0xf4>
			{
				switch(Copy_Port)
 65c:	8a 81       	ldd	r24, Y+2	; 0x02
 65e:	28 2f       	mov	r18, r24
 660:	30 e0       	ldi	r19, 0x00	; 0
 662:	3d 83       	std	Y+5, r19	; 0x05
 664:	2c 83       	std	Y+4, r18	; 0x04
 666:	8c 81       	ldd	r24, Y+4	; 0x04
 668:	9d 81       	ldd	r25, Y+5	; 0x05
 66a:	81 30       	cpi	r24, 0x01	; 1
 66c:	91 05       	cpc	r25, r1
 66e:	c9 f0       	breq	.+50     	; 0x6a2 <DIO_uint8SetValuePort+0xd6>
 670:	2c 81       	ldd	r18, Y+4	; 0x04
 672:	3d 81       	ldd	r19, Y+5	; 0x05
 674:	22 30       	cpi	r18, 0x02	; 2
 676:	31 05       	cpc	r19, r1
 678:	2c f4       	brge	.+10     	; 0x684 <DIO_uint8SetValuePort+0xb8>
 67a:	8c 81       	ldd	r24, Y+4	; 0x04
 67c:	9d 81       	ldd	r25, Y+5	; 0x05
 67e:	00 97       	sbiw	r24, 0x00	; 0
 680:	61 f0       	breq	.+24     	; 0x69a <DIO_uint8SetValuePort+0xce>
 682:	1b c0       	rjmp	.+54     	; 0x6ba <DIO_uint8SetValuePort+0xee>
 684:	2c 81       	ldd	r18, Y+4	; 0x04
 686:	3d 81       	ldd	r19, Y+5	; 0x05
 688:	22 30       	cpi	r18, 0x02	; 2
 68a:	31 05       	cpc	r19, r1
 68c:	71 f0       	breq	.+28     	; 0x6aa <DIO_uint8SetValuePort+0xde>
 68e:	8c 81       	ldd	r24, Y+4	; 0x04
 690:	9d 81       	ldd	r25, Y+5	; 0x05
 692:	83 30       	cpi	r24, 0x03	; 3
 694:	91 05       	cpc	r25, r1
 696:	69 f0       	breq	.+26     	; 0x6b2 <DIO_uint8SetValuePort+0xe6>
 698:	10 c0       	rjmp	.+32     	; 0x6ba <DIO_uint8SetValuePort+0xee>
				{
					case PORT_A: PORTA=PORT_LOW;break;
 69a:	eb e3       	ldi	r30, 0x3B	; 59
 69c:	f0 e0       	ldi	r31, 0x00	; 0
 69e:	10 82       	st	Z, r1
 6a0:	11 c0       	rjmp	.+34     	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_B: PORTB=PORT_LOW;break;
 6a2:	e8 e3       	ldi	r30, 0x38	; 56
 6a4:	f0 e0       	ldi	r31, 0x00	; 0
 6a6:	10 82       	st	Z, r1
 6a8:	0d c0       	rjmp	.+26     	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_C: PORTC=PORT_LOW;break;
 6aa:	e5 e3       	ldi	r30, 0x35	; 53
 6ac:	f0 e0       	ldi	r31, 0x00	; 0
 6ae:	10 82       	st	Z, r1
 6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					case PORT_D: PORTD=PORT_LOW;break;
 6b2:	e2 e3       	ldi	r30, 0x32	; 50
 6b4:	f0 e0       	ldi	r31, 0x00	; 0
 6b6:	10 82       	st	Z, r1
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
					default: DIO_L_ErrorCode=1;break;
 6ba:	81 e0       	ldi	r24, 0x01	; 1
 6bc:	89 83       	std	Y+1, r24	; 0x01
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_uint8SetValuePort+0xf8>
				}
			}
		else
			DIO_L_ErrorCode=1;
 6c0:	81 e0       	ldi	r24, 0x01	; 1
 6c2:	89 83       	std	Y+1, r24	; 0x01
}
 6c4:	27 96       	adiw	r28, 0x07	; 7
 6c6:	0f b6       	in	r0, 0x3f	; 63
 6c8:	f8 94       	cli
 6ca:	de bf       	out	0x3e, r29	; 62
 6cc:	0f be       	out	0x3f, r0	; 63
 6ce:	cd bf       	out	0x3d, r28	; 61
 6d0:	cf 91       	pop	r28
 6d2:	df 91       	pop	r29
 6d4:	08 95       	ret

000006d6 <DIO_uint8Set_SpecificValue_Port>:

/*-------------------------------------------------------------------------------------*/

void DIO_uint8Set_SpecificValue_Port(PORT_NAME Copy_Port,uint8 Copy_Value)
{
 6d6:	df 93       	push	r29
 6d8:	cf 93       	push	r28
 6da:	00 d0       	rcall	.+0      	; 0x6dc <DIO_uint8Set_SpecificValue_Port+0x6>
 6dc:	00 d0       	rcall	.+0      	; 0x6de <DIO_uint8Set_SpecificValue_Port+0x8>
 6de:	0f 92       	push	r0
 6e0:	cd b7       	in	r28, 0x3d	; 61
 6e2:	de b7       	in	r29, 0x3e	; 62
 6e4:	8a 83       	std	Y+2, r24	; 0x02
 6e6:	6b 83       	std	Y+3, r22	; 0x03
	uint8 DIO_L_ErrorCode;
	/* Check on the Required PORT Number */
	switch(Copy_Port)
 6e8:	8a 81       	ldd	r24, Y+2	; 0x02
 6ea:	28 2f       	mov	r18, r24
 6ec:	30 e0       	ldi	r19, 0x00	; 0
 6ee:	3d 83       	std	Y+5, r19	; 0x05
 6f0:	2c 83       	std	Y+4, r18	; 0x04
 6f2:	8c 81       	ldd	r24, Y+4	; 0x04
 6f4:	9d 81       	ldd	r25, Y+5	; 0x05
 6f6:	81 30       	cpi	r24, 0x01	; 1
 6f8:	91 05       	cpc	r25, r1
 6fa:	d1 f0       	breq	.+52     	; 0x730 <DIO_uint8Set_SpecificValue_Port+0x5a>
 6fc:	2c 81       	ldd	r18, Y+4	; 0x04
 6fe:	3d 81       	ldd	r19, Y+5	; 0x05
 700:	22 30       	cpi	r18, 0x02	; 2
 702:	31 05       	cpc	r19, r1
 704:	2c f4       	brge	.+10     	; 0x710 <DIO_uint8Set_SpecificValue_Port+0x3a>
 706:	8c 81       	ldd	r24, Y+4	; 0x04
 708:	9d 81       	ldd	r25, Y+5	; 0x05
 70a:	00 97       	sbiw	r24, 0x00	; 0
 70c:	61 f0       	breq	.+24     	; 0x726 <DIO_uint8Set_SpecificValue_Port+0x50>
 70e:	1f c0       	rjmp	.+62     	; 0x74e <DIO_uint8Set_SpecificValue_Port+0x78>
 710:	2c 81       	ldd	r18, Y+4	; 0x04
 712:	3d 81       	ldd	r19, Y+5	; 0x05
 714:	22 30       	cpi	r18, 0x02	; 2
 716:	31 05       	cpc	r19, r1
 718:	81 f0       	breq	.+32     	; 0x73a <DIO_uint8Set_SpecificValue_Port+0x64>
 71a:	8c 81       	ldd	r24, Y+4	; 0x04
 71c:	9d 81       	ldd	r25, Y+5	; 0x05
 71e:	83 30       	cpi	r24, 0x03	; 3
 720:	91 05       	cpc	r25, r1
 722:	81 f0       	breq	.+32     	; 0x744 <DIO_uint8Set_SpecificValue_Port+0x6e>
 724:	14 c0       	rjmp	.+40     	; 0x74e <DIO_uint8Set_SpecificValue_Port+0x78>
	{
		case PORT_A:PORTA=Copy_Value;break;
 726:	eb e3       	ldi	r30, 0x3B	; 59
 728:	f0 e0       	ldi	r31, 0x00	; 0
 72a:	8b 81       	ldd	r24, Y+3	; 0x03
 72c:	80 83       	st	Z, r24
 72e:	11 c0       	rjmp	.+34     	; 0x752 <DIO_uint8Set_SpecificValue_Port+0x7c>
		case PORT_B:PORTB=Copy_Value;break;
 730:	e8 e3       	ldi	r30, 0x38	; 56
 732:	f0 e0       	ldi	r31, 0x00	; 0
 734:	8b 81       	ldd	r24, Y+3	; 0x03
 736:	80 83       	st	Z, r24
 738:	0c c0       	rjmp	.+24     	; 0x752 <DIO_uint8Set_SpecificValue_Port+0x7c>
		case PORT_C:PORTC=Copy_Value;break;
 73a:	e5 e3       	ldi	r30, 0x35	; 53
 73c:	f0 e0       	ldi	r31, 0x00	; 0
 73e:	8b 81       	ldd	r24, Y+3	; 0x03
 740:	80 83       	st	Z, r24
 742:	07 c0       	rjmp	.+14     	; 0x752 <DIO_uint8Set_SpecificValue_Port+0x7c>
		case PORT_D:PORTD=Copy_Value;break;
 744:	e2 e3       	ldi	r30, 0x32	; 50
 746:	f0 e0       	ldi	r31, 0x00	; 0
 748:	8b 81       	ldd	r24, Y+3	; 0x03
 74a:	80 83       	st	Z, r24
 74c:	02 c0       	rjmp	.+4      	; 0x752 <DIO_uint8Set_SpecificValue_Port+0x7c>
		default: DIO_L_ErrorCode=1;break;
 74e:	81 e0       	ldi	r24, 0x01	; 1
 750:	89 83       	std	Y+1, r24	; 0x01
	}

}
 752:	0f 90       	pop	r0
 754:	0f 90       	pop	r0
 756:	0f 90       	pop	r0
 758:	0f 90       	pop	r0
 75a:	0f 90       	pop	r0
 75c:	cf 91       	pop	r28
 75e:	df 91       	pop	r29
 760:	08 95       	ret

00000762 <DIO_uint8Set_SpecificValue_Port_Direction>:

/*------------------------------------------------------------------------*/

void DIO_uint8Set_SpecificValue_Port_Direction(PORT_NAME Copy_Port,uint8 Copy_Dir)
{
 762:	df 93       	push	r29
 764:	cf 93       	push	r28
 766:	00 d0       	rcall	.+0      	; 0x768 <DIO_uint8Set_SpecificValue_Port_Direction+0x6>
 768:	00 d0       	rcall	.+0      	; 0x76a <DIO_uint8Set_SpecificValue_Port_Direction+0x8>
 76a:	0f 92       	push	r0
 76c:	cd b7       	in	r28, 0x3d	; 61
 76e:	de b7       	in	r29, 0x3e	; 62
 770:	8a 83       	std	Y+2, r24	; 0x02
 772:	6b 83       	std	Y+3, r22	; 0x03
	uint8 DIO_L_ErrorCode;
		/* Check on the Required PORT Number */
		switch(Copy_Port)
 774:	8a 81       	ldd	r24, Y+2	; 0x02
 776:	28 2f       	mov	r18, r24
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	3d 83       	std	Y+5, r19	; 0x05
 77c:	2c 83       	std	Y+4, r18	; 0x04
 77e:	8c 81       	ldd	r24, Y+4	; 0x04
 780:	9d 81       	ldd	r25, Y+5	; 0x05
 782:	81 30       	cpi	r24, 0x01	; 1
 784:	91 05       	cpc	r25, r1
 786:	d1 f0       	breq	.+52     	; 0x7bc <DIO_uint8Set_SpecificValue_Port_Direction+0x5a>
 788:	2c 81       	ldd	r18, Y+4	; 0x04
 78a:	3d 81       	ldd	r19, Y+5	; 0x05
 78c:	22 30       	cpi	r18, 0x02	; 2
 78e:	31 05       	cpc	r19, r1
 790:	2c f4       	brge	.+10     	; 0x79c <DIO_uint8Set_SpecificValue_Port_Direction+0x3a>
 792:	8c 81       	ldd	r24, Y+4	; 0x04
 794:	9d 81       	ldd	r25, Y+5	; 0x05
 796:	00 97       	sbiw	r24, 0x00	; 0
 798:	61 f0       	breq	.+24     	; 0x7b2 <DIO_uint8Set_SpecificValue_Port_Direction+0x50>
 79a:	1f c0       	rjmp	.+62     	; 0x7da <DIO_uint8Set_SpecificValue_Port_Direction+0x78>
 79c:	2c 81       	ldd	r18, Y+4	; 0x04
 79e:	3d 81       	ldd	r19, Y+5	; 0x05
 7a0:	22 30       	cpi	r18, 0x02	; 2
 7a2:	31 05       	cpc	r19, r1
 7a4:	81 f0       	breq	.+32     	; 0x7c6 <DIO_uint8Set_SpecificValue_Port_Direction+0x64>
 7a6:	8c 81       	ldd	r24, Y+4	; 0x04
 7a8:	9d 81       	ldd	r25, Y+5	; 0x05
 7aa:	83 30       	cpi	r24, 0x03	; 3
 7ac:	91 05       	cpc	r25, r1
 7ae:	81 f0       	breq	.+32     	; 0x7d0 <DIO_uint8Set_SpecificValue_Port_Direction+0x6e>
 7b0:	14 c0       	rjmp	.+40     	; 0x7da <DIO_uint8Set_SpecificValue_Port_Direction+0x78>
		{
			case PORT_A:DDRA=Copy_Dir;break;
 7b2:	ea e3       	ldi	r30, 0x3A	; 58
 7b4:	f0 e0       	ldi	r31, 0x00	; 0
 7b6:	8b 81       	ldd	r24, Y+3	; 0x03
 7b8:	80 83       	st	Z, r24
 7ba:	11 c0       	rjmp	.+34     	; 0x7de <DIO_uint8Set_SpecificValue_Port_Direction+0x7c>
			case PORT_B:DDRB=Copy_Dir;break;
 7bc:	e7 e3       	ldi	r30, 0x37	; 55
 7be:	f0 e0       	ldi	r31, 0x00	; 0
 7c0:	8b 81       	ldd	r24, Y+3	; 0x03
 7c2:	80 83       	st	Z, r24
 7c4:	0c c0       	rjmp	.+24     	; 0x7de <DIO_uint8Set_SpecificValue_Port_Direction+0x7c>
			case PORT_C:DDRC=Copy_Dir;break;
 7c6:	e4 e3       	ldi	r30, 0x34	; 52
 7c8:	f0 e0       	ldi	r31, 0x00	; 0
 7ca:	8b 81       	ldd	r24, Y+3	; 0x03
 7cc:	80 83       	st	Z, r24
 7ce:	07 c0       	rjmp	.+14     	; 0x7de <DIO_uint8Set_SpecificValue_Port_Direction+0x7c>
			case PORT_D:DDRD=Copy_Dir;break;
 7d0:	e1 e3       	ldi	r30, 0x31	; 49
 7d2:	f0 e0       	ldi	r31, 0x00	; 0
 7d4:	8b 81       	ldd	r24, Y+3	; 0x03
 7d6:	80 83       	st	Z, r24
 7d8:	02 c0       	rjmp	.+4      	; 0x7de <DIO_uint8Set_SpecificValue_Port_Direction+0x7c>
			default: DIO_L_ErrorCode=1;break;
 7da:	81 e0       	ldi	r24, 0x01	; 1
 7dc:	89 83       	std	Y+1, r24	; 0x01
		}
}
 7de:	0f 90       	pop	r0
 7e0:	0f 90       	pop	r0
 7e2:	0f 90       	pop	r0
 7e4:	0f 90       	pop	r0
 7e6:	0f 90       	pop	r0
 7e8:	cf 91       	pop	r28
 7ea:	df 91       	pop	r29
 7ec:	08 95       	ret

000007ee <DIO_uint8Read_PIN>:

/*------------------------------------------------------------------------*/

PIN_VALUE DIO_uint8Read_PIN(PORT_NAME Copy_Port,PIN_NAME Copy_Pin)
{
 7ee:	df 93       	push	r29
 7f0:	cf 93       	push	r28
 7f2:	00 d0       	rcall	.+0      	; 0x7f4 <DIO_uint8Read_PIN+0x6>
 7f4:	00 d0       	rcall	.+0      	; 0x7f6 <DIO_uint8Read_PIN+0x8>
 7f6:	00 d0       	rcall	.+0      	; 0x7f8 <DIO_uint8Read_PIN+0xa>
 7f8:	cd b7       	in	r28, 0x3d	; 61
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	8b 83       	std	Y+3, r24	; 0x03
 7fe:	6c 83       	std	Y+4, r22	; 0x04
	PIN_VALUE Copy_Value;
	uint8 DIO_L_ErrorCode;

	if(Copy_Port <= PORT_D && Copy_Pin <= PIN_7)
 800:	8b 81       	ldd	r24, Y+3	; 0x03
 802:	84 30       	cpi	r24, 0x04	; 4
 804:	08 f0       	brcs	.+2      	; 0x808 <DIO_uint8Read_PIN+0x1a>
 806:	6f c0       	rjmp	.+222    	; 0x8e6 <__stack+0x87>
 808:	8c 81       	ldd	r24, Y+4	; 0x04
 80a:	88 30       	cpi	r24, 0x08	; 8
 80c:	08 f0       	brcs	.+2      	; 0x810 <DIO_uint8Read_PIN+0x22>
 80e:	6b c0       	rjmp	.+214    	; 0x8e6 <__stack+0x87>
	{
		switch(Copy_Port)
 810:	8b 81       	ldd	r24, Y+3	; 0x03
 812:	28 2f       	mov	r18, r24
 814:	30 e0       	ldi	r19, 0x00	; 0
 816:	3e 83       	std	Y+6, r19	; 0x06
 818:	2d 83       	std	Y+5, r18	; 0x05
 81a:	4d 81       	ldd	r20, Y+5	; 0x05
 81c:	5e 81       	ldd	r21, Y+6	; 0x06
 81e:	41 30       	cpi	r20, 0x01	; 1
 820:	51 05       	cpc	r21, r1
 822:	41 f1       	breq	.+80     	; 0x874 <__stack+0x15>
 824:	8d 81       	ldd	r24, Y+5	; 0x05
 826:	9e 81       	ldd	r25, Y+6	; 0x06
 828:	82 30       	cpi	r24, 0x02	; 2
 82a:	91 05       	cpc	r25, r1
 82c:	34 f4       	brge	.+12     	; 0x83a <DIO_uint8Read_PIN+0x4c>
 82e:	2d 81       	ldd	r18, Y+5	; 0x05
 830:	3e 81       	ldd	r19, Y+6	; 0x06
 832:	21 15       	cp	r18, r1
 834:	31 05       	cpc	r19, r1
 836:	61 f0       	breq	.+24     	; 0x850 <DIO_uint8Read_PIN+0x62>
 838:	53 c0       	rjmp	.+166    	; 0x8e0 <__stack+0x81>
 83a:	4d 81       	ldd	r20, Y+5	; 0x05
 83c:	5e 81       	ldd	r21, Y+6	; 0x06
 83e:	42 30       	cpi	r20, 0x02	; 2
 840:	51 05       	cpc	r21, r1
 842:	51 f1       	breq	.+84     	; 0x898 <__stack+0x39>
 844:	8d 81       	ldd	r24, Y+5	; 0x05
 846:	9e 81       	ldd	r25, Y+6	; 0x06
 848:	83 30       	cpi	r24, 0x03	; 3
 84a:	91 05       	cpc	r25, r1
 84c:	b9 f1       	breq	.+110    	; 0x8bc <__stack+0x5d>
 84e:	48 c0       	rjmp	.+144    	; 0x8e0 <__stack+0x81>
			{
				case PORT_A:Copy_Value = GET_BIT(PORTA,Copy_Pin); break;
 850:	eb e3       	ldi	r30, 0x3B	; 59
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	80 81       	ld	r24, Z
 856:	28 2f       	mov	r18, r24
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	8c 81       	ldd	r24, Y+4	; 0x04
 85c:	88 2f       	mov	r24, r24
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	a9 01       	movw	r20, r18
 862:	02 c0       	rjmp	.+4      	; 0x868 <__stack+0x9>
 864:	55 95       	asr	r21
 866:	47 95       	ror	r20
 868:	8a 95       	dec	r24
 86a:	e2 f7       	brpl	.-8      	; 0x864 <__stack+0x5>
 86c:	ca 01       	movw	r24, r20
 86e:	81 70       	andi	r24, 0x01	; 1
 870:	8a 83       	std	Y+2, r24	; 0x02
 872:	3b c0       	rjmp	.+118    	; 0x8ea <__stack+0x8b>
				case PORT_B:Copy_Value = GET_BIT(PORTB,Copy_Pin); break;
 874:	e8 e3       	ldi	r30, 0x38	; 56
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	80 81       	ld	r24, Z
 87a:	28 2f       	mov	r18, r24
 87c:	30 e0       	ldi	r19, 0x00	; 0
 87e:	8c 81       	ldd	r24, Y+4	; 0x04
 880:	88 2f       	mov	r24, r24
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	a9 01       	movw	r20, r18
 886:	02 c0       	rjmp	.+4      	; 0x88c <__stack+0x2d>
 888:	55 95       	asr	r21
 88a:	47 95       	ror	r20
 88c:	8a 95       	dec	r24
 88e:	e2 f7       	brpl	.-8      	; 0x888 <__stack+0x29>
 890:	ca 01       	movw	r24, r20
 892:	81 70       	andi	r24, 0x01	; 1
 894:	8a 83       	std	Y+2, r24	; 0x02
 896:	29 c0       	rjmp	.+82     	; 0x8ea <__stack+0x8b>
				case PORT_C:Copy_Value = GET_BIT(PORTC,Copy_Pin); break;
 898:	e5 e3       	ldi	r30, 0x35	; 53
 89a:	f0 e0       	ldi	r31, 0x00	; 0
 89c:	80 81       	ld	r24, Z
 89e:	28 2f       	mov	r18, r24
 8a0:	30 e0       	ldi	r19, 0x00	; 0
 8a2:	8c 81       	ldd	r24, Y+4	; 0x04
 8a4:	88 2f       	mov	r24, r24
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	a9 01       	movw	r20, r18
 8aa:	02 c0       	rjmp	.+4      	; 0x8b0 <__stack+0x51>
 8ac:	55 95       	asr	r21
 8ae:	47 95       	ror	r20
 8b0:	8a 95       	dec	r24
 8b2:	e2 f7       	brpl	.-8      	; 0x8ac <__stack+0x4d>
 8b4:	ca 01       	movw	r24, r20
 8b6:	81 70       	andi	r24, 0x01	; 1
 8b8:	8a 83       	std	Y+2, r24	; 0x02
 8ba:	17 c0       	rjmp	.+46     	; 0x8ea <__stack+0x8b>
				case PORT_D:Copy_Value = GET_BIT(PORTD,Copy_Pin); break;
 8bc:	e2 e3       	ldi	r30, 0x32	; 50
 8be:	f0 e0       	ldi	r31, 0x00	; 0
 8c0:	80 81       	ld	r24, Z
 8c2:	28 2f       	mov	r18, r24
 8c4:	30 e0       	ldi	r19, 0x00	; 0
 8c6:	8c 81       	ldd	r24, Y+4	; 0x04
 8c8:	88 2f       	mov	r24, r24
 8ca:	90 e0       	ldi	r25, 0x00	; 0
 8cc:	a9 01       	movw	r20, r18
 8ce:	02 c0       	rjmp	.+4      	; 0x8d4 <__stack+0x75>
 8d0:	55 95       	asr	r21
 8d2:	47 95       	ror	r20
 8d4:	8a 95       	dec	r24
 8d6:	e2 f7       	brpl	.-8      	; 0x8d0 <__stack+0x71>
 8d8:	ca 01       	movw	r24, r20
 8da:	81 70       	andi	r24, 0x01	; 1
 8dc:	8a 83       	std	Y+2, r24	; 0x02
 8de:	05 c0       	rjmp	.+10     	; 0x8ea <__stack+0x8b>
				default: DIO_L_ErrorCode=1; break;
 8e0:	81 e0       	ldi	r24, 0x01	; 1
 8e2:	89 83       	std	Y+1, r24	; 0x01
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <__stack+0x8b>
			}
	}
	else
	{
		DIO_L_ErrorCode=1;
 8e6:	81 e0       	ldi	r24, 0x01	; 1
 8e8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Copy_Value;
 8ea:	8a 81       	ldd	r24, Y+2	; 0x02

}
 8ec:	26 96       	adiw	r28, 0x06	; 6
 8ee:	0f b6       	in	r0, 0x3f	; 63
 8f0:	f8 94       	cli
 8f2:	de bf       	out	0x3e, r29	; 62
 8f4:	0f be       	out	0x3f, r0	; 63
 8f6:	cd bf       	out	0x3d, r28	; 61
 8f8:	cf 91       	pop	r28
 8fa:	df 91       	pop	r29
 8fc:	08 95       	ret

000008fe <KEYPAD_INIT>:
static uint8 keypad_rows[KEYPAD_ROWS] = {R1,R2,R3,R4};
static uint8 keypad_columns[KEYPAD_COLUMNS] = {C1,C2,C3,C4};


void KEYPAD_INIT(void)
{
 8fe:	df 93       	push	r29
 900:	cf 93       	push	r28
 902:	cd b7       	in	r28, 0x3d	; 61
 904:	de b7       	in	r29, 0x3e	; 62
	// Set Rows -> Input
	DIO_uint8SetDirectionPIN(KPD_ROWS_PORT , R1 , PIN_INPUT);
 906:	83 e0       	ldi	r24, 0x03	; 3
 908:	60 e0       	ldi	r22, 0x00	; 0
 90a:	40 e0       	ldi	r20, 0x00	; 0
 90c:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_ROWS_PORT , R2 , PIN_INPUT);
 910:	83 e0       	ldi	r24, 0x03	; 3
 912:	61 e0       	ldi	r22, 0x01	; 1
 914:	40 e0       	ldi	r20, 0x00	; 0
 916:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_ROWS_PORT , R3 , PIN_INPUT);
 91a:	83 e0       	ldi	r24, 0x03	; 3
 91c:	62 e0       	ldi	r22, 0x02	; 2
 91e:	40 e0       	ldi	r20, 0x00	; 0
 920:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_ROWS_PORT , R4 , PIN_INPUT);
 924:	83 e0       	ldi	r24, 0x03	; 3
 926:	63 e0       	ldi	r22, 0x03	; 3
 928:	40 e0       	ldi	r20, 0x00	; 0
 92a:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>

	// Set Columns -> Output
	DIO_uint8SetDirectionPIN(KPD_COLUMNS_PORT , C1 , PIN_OUTPUT);
 92e:	83 e0       	ldi	r24, 0x03	; 3
 930:	64 e0       	ldi	r22, 0x04	; 4
 932:	41 e0       	ldi	r20, 0x01	; 1
 934:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_COLUMNS_PORT , C2 , PIN_OUTPUT);
 938:	83 e0       	ldi	r24, 0x03	; 3
 93a:	65 e0       	ldi	r22, 0x05	; 5
 93c:	41 e0       	ldi	r20, 0x01	; 1
 93e:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_COLUMNS_PORT , C3 , PIN_OUTPUT);
 942:	83 e0       	ldi	r24, 0x03	; 3
 944:	66 e0       	ldi	r22, 0x06	; 6
 946:	41 e0       	ldi	r20, 0x01	; 1
 948:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>
	DIO_uint8SetDirectionPIN(KPD_COLUMNS_PORT , C4 , PIN_OUTPUT);
 94c:	83 e0       	ldi	r24, 0x03	; 3
 94e:	67 e0       	ldi	r22, 0x07	; 7
 950:	41 e0       	ldi	r20, 0x01	; 1
 952:	0e 94 41 00 	call	0x82	; 0x82 <DIO_uint8SetDirectionPIN>

	// at the beginning: make all output columns as high , also all input rows as high to be connected with pull up resistors

	DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C1 , PIN_HIGH);
 956:	83 e0       	ldi	r24, 0x03	; 3
 958:	64 e0       	ldi	r22, 0x04	; 4
 95a:	41 e0       	ldi	r20, 0x01	; 1
 95c:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C2 , PIN_HIGH);
 960:	83 e0       	ldi	r24, 0x03	; 3
 962:	65 e0       	ldi	r22, 0x05	; 5
 964:	41 e0       	ldi	r20, 0x01	; 1
 966:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C3 , PIN_HIGH);
 96a:	83 e0       	ldi	r24, 0x03	; 3
 96c:	66 e0       	ldi	r22, 0x06	; 6
 96e:	41 e0       	ldi	r20, 0x01	; 1
 970:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C4 , PIN_HIGH);
 974:	83 e0       	ldi	r24, 0x03	; 3
 976:	67 e0       	ldi	r22, 0x07	; 7
 978:	41 e0       	ldi	r20, 0x01	; 1
 97a:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>

	DIO_uint8SetValuePIN(KPD_ROWS_PORT , R1 , PIN_HIGH);
 97e:	83 e0       	ldi	r24, 0x03	; 3
 980:	60 e0       	ldi	r22, 0x00	; 0
 982:	41 e0       	ldi	r20, 0x01	; 1
 984:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_ROWS_PORT , R2 , PIN_HIGH);
 988:	83 e0       	ldi	r24, 0x03	; 3
 98a:	61 e0       	ldi	r22, 0x01	; 1
 98c:	41 e0       	ldi	r20, 0x01	; 1
 98e:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_ROWS_PORT , R3 , PIN_HIGH);
 992:	83 e0       	ldi	r24, 0x03	; 3
 994:	62 e0       	ldi	r22, 0x02	; 2
 996:	41 e0       	ldi	r20, 0x01	; 1
 998:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
	DIO_uint8SetValuePIN(KPD_ROWS_PORT , R4 , PIN_HIGH);
 99c:	83 e0       	ldi	r24, 0x03	; 3
 99e:	63 e0       	ldi	r22, 0x03	; 3
 9a0:	41 e0       	ldi	r20, 0x01	; 1
 9a2:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>

}
 9a6:	cf 91       	pop	r28
 9a8:	df 91       	pop	r29
 9aa:	08 95       	ret

000009ac <KEYPAD_GET_KEY>:

uint8 KEYPAD_GET_KEY(void)
{
 9ac:	df 93       	push	r29
 9ae:	cf 93       	push	r28
 9b0:	00 d0       	rcall	.+0      	; 0x9b2 <KEYPAD_GET_KEY+0x6>
 9b2:	0f 92       	push	r0
 9b4:	cd b7       	in	r28, 0x3d	; 61
 9b6:	de b7       	in	r29, 0x3e	; 62

	uint8 i,j;
	static uint8 keys[KEYPAD_ROWS][KEYPAD_COLUMNS] = KPD_KEYS;

	for (i=0 ; i<KEYPAD_COLUMNS; i++)
 9b8:	1a 82       	std	Y+2, r1	; 0x02
 9ba:	58 c0       	rjmp	.+176    	; 0xa6c <KEYPAD_GET_KEY+0xc0>
	{
		// Set all the columns to high
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C1 , PIN_HIGH);
 9bc:	83 e0       	ldi	r24, 0x03	; 3
 9be:	64 e0       	ldi	r22, 0x04	; 4
 9c0:	41 e0       	ldi	r20, 0x01	; 1
 9c2:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C2 , PIN_HIGH);
 9c6:	83 e0       	ldi	r24, 0x03	; 3
 9c8:	65 e0       	ldi	r22, 0x05	; 5
 9ca:	41 e0       	ldi	r20, 0x01	; 1
 9cc:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C3 , PIN_HIGH);
 9d0:	83 e0       	ldi	r24, 0x03	; 3
 9d2:	66 e0       	ldi	r22, 0x06	; 6
 9d4:	41 e0       	ldi	r20, 0x01	; 1
 9d6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , C4 , PIN_HIGH);
 9da:	83 e0       	ldi	r24, 0x03	; 3
 9dc:	67 e0       	ldi	r22, 0x07	; 7
 9de:	41 e0       	ldi	r20, 0x01	; 1
 9e0:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>

		// Set column[i] to low
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , keypad_columns[i] ,PIN_LOW);
 9e4:	8a 81       	ldd	r24, Y+2	; 0x02
 9e6:	88 2f       	mov	r24, r24
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	fc 01       	movw	r30, r24
 9ec:	ec 59       	subi	r30, 0x9C	; 156
 9ee:	ff 4f       	sbci	r31, 0xFF	; 255
 9f0:	90 81       	ld	r25, Z
 9f2:	83 e0       	ldi	r24, 0x03	; 3
 9f4:	69 2f       	mov	r22, r25
 9f6:	40 e0       	ldi	r20, 0x00	; 0
 9f8:	0e 94 d6 01 	call	0x3ac	; 0x3ac <DIO_uint8SetValuePIN>

		// Loop on every row to see if a key is pressed
		for(j=0 ; j< KEYPAD_ROWS ; j++)
 9fc:	19 82       	std	Y+1, r1	; 0x01
 9fe:	30 c0       	rjmp	.+96     	; 0xa60 <KEYPAD_GET_KEY+0xb4>
		{
			if(DIO_uint8Read_PIN(KPD_ROWS_PORT , keypad_rows[j]) == 0)
 a00:	89 81       	ldd	r24, Y+1	; 0x01
 a02:	88 2f       	mov	r24, r24
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	fc 01       	movw	r30, r24
 a08:	e0 5a       	subi	r30, 0xA0	; 160
 a0a:	ff 4f       	sbci	r31, 0xFF	; 255
 a0c:	90 81       	ld	r25, Z
 a0e:	83 e0       	ldi	r24, 0x03	; 3
 a10:	69 2f       	mov	r22, r25
 a12:	0e 94 f7 03 	call	0x7ee	; 0x7ee <DIO_uint8Read_PIN>
 a16:	88 23       	and	r24, r24
 a18:	01 f5       	brne	.+64     	; 0xa5a <KEYPAD_GET_KEY+0xae>
			{
				while(DIO_uint8Read_PIN(KPD_ROWS_PORT , keypad_rows[j]) == 0);	// for single press
 a1a:	89 81       	ldd	r24, Y+1	; 0x01
 a1c:	88 2f       	mov	r24, r24
 a1e:	90 e0       	ldi	r25, 0x00	; 0
 a20:	fc 01       	movw	r30, r24
 a22:	e0 5a       	subi	r30, 0xA0	; 160
 a24:	ff 4f       	sbci	r31, 0xFF	; 255
 a26:	90 81       	ld	r25, Z
 a28:	83 e0       	ldi	r24, 0x03	; 3
 a2a:	69 2f       	mov	r22, r25
 a2c:	0e 94 f7 03 	call	0x7ee	; 0x7ee <DIO_uint8Read_PIN>
 a30:	88 23       	and	r24, r24
 a32:	99 f3       	breq	.-26     	; 0xa1a <KEYPAD_GET_KEY+0x6e>
				return keys[j][i];
 a34:	89 81       	ldd	r24, Y+1	; 0x01
 a36:	48 2f       	mov	r20, r24
 a38:	50 e0       	ldi	r21, 0x00	; 0
 a3a:	8a 81       	ldd	r24, Y+2	; 0x02
 a3c:	28 2f       	mov	r18, r24
 a3e:	30 e0       	ldi	r19, 0x00	; 0
 a40:	ca 01       	movw	r24, r20
 a42:	88 0f       	add	r24, r24
 a44:	99 1f       	adc	r25, r25
 a46:	88 0f       	add	r24, r24
 a48:	99 1f       	adc	r25, r25
 a4a:	82 0f       	add	r24, r18
 a4c:	93 1f       	adc	r25, r19
 a4e:	fc 01       	movw	r30, r24
 a50:	e8 59       	subi	r30, 0x98	; 152
 a52:	ff 4f       	sbci	r31, 0xFF	; 255
 a54:	80 81       	ld	r24, Z
 a56:	8b 83       	std	Y+3, r24	; 0x03
 a58:	0f c0       	rjmp	.+30     	; 0xa78 <KEYPAD_GET_KEY+0xcc>

		// Set column[i] to low
		DIO_uint8SetValuePIN(KPD_COLUMNS_PORT , keypad_columns[i] ,PIN_LOW);

		// Loop on every row to see if a key is pressed
		for(j=0 ; j< KEYPAD_ROWS ; j++)
 a5a:	89 81       	ldd	r24, Y+1	; 0x01
 a5c:	8f 5f       	subi	r24, 0xFF	; 255
 a5e:	89 83       	std	Y+1, r24	; 0x01
 a60:	89 81       	ldd	r24, Y+1	; 0x01
 a62:	84 30       	cpi	r24, 0x04	; 4
 a64:	68 f2       	brcs	.-102    	; 0xa00 <KEYPAD_GET_KEY+0x54>
{

	uint8 i,j;
	static uint8 keys[KEYPAD_ROWS][KEYPAD_COLUMNS] = KPD_KEYS;

	for (i=0 ; i<KEYPAD_COLUMNS; i++)
 a66:	8a 81       	ldd	r24, Y+2	; 0x02
 a68:	8f 5f       	subi	r24, 0xFF	; 255
 a6a:	8a 83       	std	Y+2, r24	; 0x02
 a6c:	8a 81       	ldd	r24, Y+2	; 0x02
 a6e:	84 30       	cpi	r24, 0x04	; 4
 a70:	08 f4       	brcc	.+2      	; 0xa74 <KEYPAD_GET_KEY+0xc8>
 a72:	a4 cf       	rjmp	.-184    	; 0x9bc <KEYPAD_GET_KEY+0x10>
			}
		}

	}

	return '?';
 a74:	8f e3       	ldi	r24, 0x3F	; 63
 a76:	8b 83       	std	Y+3, r24	; 0x03
 a78:	8b 81       	ldd	r24, Y+3	; 0x03

}
 a7a:	0f 90       	pop	r0
 a7c:	0f 90       	pop	r0
 a7e:	0f 90       	pop	r0
 a80:	cf 91       	pop	r28
 a82:	df 91       	pop	r29
 a84:	08 95       	ret

00000a86 <main>:
#include "MCAL/DIO_REGISTERMAP.h"
#include "Keypad_Config.h"
#include "Keypad_Interface.h"

void main()
{
 a86:	df 93       	push	r29
 a88:	cf 93       	push	r28
 a8a:	cd b7       	in	r28, 0x3d	; 61
 a8c:	de b7       	in	r29, 0x3e	; 62

}
 a8e:	cf 91       	pop	r28
 a90:	df 91       	pop	r29
 a92:	08 95       	ret

00000a94 <_exit>:
 a94:	f8 94       	cli

00000a96 <__stop_program>:
 a96:	ff cf       	rjmp	.-2      	; 0xa96 <__stop_program>
